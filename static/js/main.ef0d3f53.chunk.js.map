{"version":3,"sources":["components/Chart/Chart.module.css","components/Picker/Picker.module.css","App.module.css","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/Picker/Picker.jsx","App.js","index.js","components/Cards/Cards.module.css","components/Cards/Card/Card.module.css"],"names":["module","exports","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","component","Card","xs","md","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","recovered","deaths","container","spacing","justify","infected","URL","fetchData","a","axios","get","positif","sembuh","meninggal","fetchDailyData","modifiedData","map","dailyData","date","tanggal","console","log","fetchProvinceData","province","name","provinsi","kasus","last_death","fetchProvinceName","datum","sort","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","temp","getDate","getMonth","getFullYear","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","Picker","handleProvinceChange","fetchedProvinces","setFetchedProvinces","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef0d3f53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1D2Mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Picker_formControl__6k8_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__395ZX\",\"image\":\"App_image__1ypAj\"};","import React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Card.module.css\";\r\n\r\nconst CardComponent = ({\r\n  className,\r\n  cardTitle,\r\n  value,\r\n  lastUpdate,\r\n  cardSubtitle,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      item\r\n      component={Card}\r\n      xs={12}\r\n      md={3}\r\n      className={cx(styles.card, className)}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {cardTitle}\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n          <CountUp start={0} end={value} duration={2.5} separator=\",\" />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">\r\n          {new Date(lastUpdate).toDateString()}\r\n        </Typography>\r\n        <Typography variant=\"body2\">{cardSubtitle}</Typography>\r\n      </CardContent>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardComponent from \"./Card/Card\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <CardComponent\r\n          className={styles.infected}\r\n          cardTitle=\"Infected\"\r\n          value={confirmed}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of active cases from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.recovered}\r\n          cardTitle=\"Recovered\"\r\n          value={recovered}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.deaths}\r\n          cardTitle=\"Deaths\"\r\n          value={deaths}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst URL = \"https://apicovid19indonesia-v2.vercel.app/api/indonesia\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const {\r\n      data: {\r\n        positif: confirmed,\r\n        sembuh: recovered,\r\n        meninggal: deaths,\r\n        lastUpdate,\r\n      },\r\n    } = await axios.get(URL);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${URL}/harian`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.positif,\r\n      deaths: dailyData.meninggal,\r\n      recovered: dailyData.sembuh,\r\n      date: dailyData.tanggal,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchProvinceData = async (province) => {\r\n  try {\r\n    const { data } = await axios.get(`${URL}/provinsi/more`);\r\n    for (const {\r\n      provinsi: name,\r\n      kasus: confirmed,\r\n      sembuh: recovered,\r\n      meninggal: deaths,\r\n      last_death: lastUpdate,\r\n    } of data) {\r\n      if (name === province) {\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchProvinceName = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${URL}/provinsi`);\r\n    return data.map((datum) => datum.provinsi).sort();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, province }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => {\r\n          const temp = new Date(date);\r\n          return `${temp.getDate()}-${temp.getMonth()}-${temp.getFullYear()}`;\r\n        }),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ recovered }) => recovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"green\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed, recovered, deaths],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${province}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{province ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport { fetchProvinceName } from \"../../api\";\r\n\r\nimport styles from \"./Picker.module.css\";\r\n\r\nconst Picker = ({ handleProvinceChange }) => {\r\n  const [fetchedProvinces, setFetchedProvinces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedProvinces(await fetchProvinceName());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedProvinces]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleProvinceChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Indonesia</option>\r\n        {fetchedProvinces.map((province, i) => (\r\n          <option key={i} value={province}>\r\n            {province}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n","import React from \"react\";\n\nimport { Cards, Chart, Picker } from \"./components\";\nimport styles from \"./App.module.css\";\n\nimport { fetchData, fetchProvinceData } from \"./api\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    province: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  handleProvinceChange = async (province) => {\n    if (province) {\n      const fetchedData = await fetchProvinceData(province);\n      this.setState({ data: fetchedData, province: province });\n    } else {\n      const fetchedData = await fetchData();\n      this.setState({ data: fetchedData, province: province });\n    }\n  };\n\n  render() {\n    const { data, province } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <Picker handleProvinceChange={this.handleProvinceChange} />\n        <Chart data={data} province={province} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2WuOL\",\"infected\":\"Cards_infected__1DOPq\",\"recovered\":\"Cards_recovered__3J39W\",\"deaths\":\"Cards_deaths__2ywLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1GiBt\"};"],"sourceRoot":""}